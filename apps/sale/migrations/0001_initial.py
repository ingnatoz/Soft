# Generated by Django 3.2.8 on 2021-10-31 06:14

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
                ('sat_code', models.CharField(max_length=10, verbose_name='Codigo del Sat')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Actualizado el')),
            ],
            options={
                'verbose_name': 'Tipo de Pago',
                'verbose_name_plural': 'Tipos de Pago',
                'db_table': 'sale_payment_type',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250, verbose_name='Nombre del Producto')),
                ('ean', models.CharField(max_length=15, unique=True, verbose_name='EAN')),
                ('sku', models.CharField(max_length=15, unique=True, verbose_name='SKU')),
                ('sale_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Precio de Venta')),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Costo Unitario')),
                ('sat_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Codigo del SAT')),
                ('product_type', models.CharField(max_length=50, verbose_name='Tipo del Producto')),
                ('status', models.CharField(choices=[('A', 'Activo'), ('D', 'Desactivado')], max_length=1, verbose_name='Estado del Producto')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Actualizado el')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'db_table': 'product',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
                ('status', models.BooleanField(default=True, verbose_name='Estado')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Actualizado el')),
            ],
            options={
                'verbose_name': 'Restaurante',
                'verbose_name_plural': 'Restaurantes',
                'db_table': 'restaurant',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SaleOrder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('marketplace_id', models.CharField(max_length=50, unique=True, verbose_name='Marketplace ID')),
                ('total', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.001), django.core.validators.MaxValueValidator(9999999999)], verbose_name='Total')),
                ('confirm', models.BooleanField(default=False, verbose_name='Confirmar')),
                ('status_order', models.CharField(default='Manual', max_length=15, verbose_name='Estado de la Orden')),
                ('is_fee_retrieve', models.BooleanField(default=False, verbose_name='Es deducible')),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999999)], verbose_name='Comisión de la Orden')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Actualizado el')),
                ('payment_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='payment_type_order', to='sale.paymenttype', verbose_name='Tipo de pago')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='channel_order', to='sale.restaurant', verbose_name='Canal de Venta')),
            ],
            options={
                'verbose_name': 'Orden de Venta',
                'verbose_name_plural': 'Ordenes de Venta',
                'db_table': 'sale_order',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SaleOrderProduct',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('marketplace_item_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Marketplace ID')),
                ('name', models.CharField(max_length=250, verbose_name='Nombre')),
                ('sku', models.CharField(blank=True, max_length=15, null=True, verbose_name='SKU')),
                ('ean', models.CharField(blank=True, max_length=15, null=True, verbose_name='EAN')),
                ('quantity', models.PositiveBigIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9999999999)], verbose_name='Cantidad')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999999)], verbose_name='Costo')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.001), django.core.validators.MaxValueValidator(9999999999)], verbose_name='Precio de Venta')),
                ('tax', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999999)], verbose_name='Impuesto')),
                ('shipping_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999999)], verbose_name='Precio de envío')),
                ('shipping_tax', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999999)], verbose_name='Impuesto de envío')),
                ('shipping_discount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999999)], verbose_name='Descuento de envío')),
                ('discount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999999)], verbose_name='Descuento')),
                ('commission', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999999999)], verbose_name='Comisión')),
                ('total', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.001), django.core.validators.MaxValueValidator(9999999999)], verbose_name='Total')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Creado el')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Actualizado el')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='product_sale_orders', to='sale.product', verbose_name='Producto de la Venta')),
                ('sale_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_order_products', to='sale.saleorder', verbose_name='Orden de Venta')),
            ],
            options={
                'verbose_name': 'Producto de la Orden de venta',
                'verbose_name_plural': 'Productos de las Ordenes de venta',
                'db_table': 'sale_order_product',
                'ordering': ['id'],
            },
        ),
    ]
